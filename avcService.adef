
sandboxed: false

// start: manual

executables:
{
    avcDaemon = ( avcDaemon
                  avcAppUpdate )
}

bundles:
{
    file:
    {
        [x] avcStart.sh /bin/
        [r] assets.cfg  /cfg/
    }
}

processes:
{
    run:
    {
        (avcStart.sh)
    }

    faultAction: restart
    maxFileBytes: 71680K
}

extern:
{
    avcDaemon.avcDaemon.le_avc
    avcDaemon.avcDaemon.le_avdata
}

requires:
{
    configTree:
    {
        [w] system
        [w] .
    }
}

bindings:
{
    avcDaemon.avcAppUpdate.le_update -> <root>.le_update
    avcDaemon.avcAppUpdate.le_instStat -> <root>.le_instStat
    avcDaemon.avcAppUpdate.le_appCtrl -> <root>.le_appCtrl
    avcDaemon.avcAppUpdate.le_framework -> <root>.le_framework
    avcDaemon.avcAppUpdate.le_appInfo -> <root>.le_appInfo
    avcDaemon.avcAppUpdate.le_appRemove -> <root>.le_appRemove
    avcDaemon.avcDaemon.le_appInfo -> <root>.le_appInfo
    avcDaemon.avcDaemon.le_info -> <root>.le_info
    avcDaemon.avcDaemon.le_data -> <root>.le_data
    avcDaemon.avcDaemon.le_sim -> <root>.le_sim
    avcDaemon.avcDaemon.le_pos -> <root>.le_pos
    avcDaemon.avcDaemon.le_rtc -> <root>.le_rtc
    avcDaemon.avcDaemon.le_fwupdate -> <root>.le_fwupdate
    avcDaemon.avcDaemon.le_update -> <root>.le_update
}
